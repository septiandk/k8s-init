- name: Teardown Kubernetes cluster created with kubeadm
  hosts: all
  become: true
  tasks:
    - name: Drain node (only on master if possible)
      shell: |
        kubectl drain {{ inventory_hostname }} --force --ignore-daemonsets
      when: inventory_hostname in groups['all'] and inventory_hostname != groups['masters'][0]
      ignore_errors: false
      no_log: false

    - name: uncordon node (only on master if possible)
      shell: |
        kubectl uncordon {{ inventory_hostname }}
      when: inventory_hostname in groups['all'] and inventory_hostname != groups['masters'][0]
      ignore_errors: false

    - name: Delete node from cluster (only on master)
      shell: |
        kubectl delete node {{ inventory_hostname }}
      when: inventory_hostname in groups['all'] and inventory_hostname != groups['masters'][0]
      ignore_errors: false

    - name: Stop kubelet service
      systemd:
        name: kubelet
        state: stopped
        enabled: no
      ignore_errors: false

    - name: Reset kubeadm
      shell: kubeadm reset -f
      ignore_errors: false

    - name: Unhold Kubernetes packages
      shell: |
        apt-mark unhold kubelet kubeadm kubectl
      ignore_errors: false

    - name: Remove Kubernetes packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: absent
        purge: true

    - name: Remove all related folders and files
      file:
        path: "{{ item }}"
        state: absent
        loop:
        - /etc/kubernetes
        - /var/lib/kubelet
        - /var/lib/etcd
        - /var/lib/cni
        - /etc/cni
        - /opt/cni
        - /run/kubernetes
        - /var/log/pods
        - /var/log/containers
        - /var/log/kube-audit
      ignore_errors: true

    - name: Remove Kubernetes apt repository
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/apt/sources.list.d/kubernetes.list
        - /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Clean up iptables
      shell: iptables -F && iptables -t nat -F && iptables -t mangle -F && iptables -X
      ignore_errors: true

    - name: Remove .kube directory for user (optional)
      file:
        path: /home/{{ ansible_user }}/.kube
        state: absent
      become_user: "{{ ansible_user }}"
      ignore_errors: true
