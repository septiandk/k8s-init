# Section 1: Install Containerd, Docker CLI, and Dependencies
- name: Install required dependencies
  apt:
    name:
      - ca-certificates
      - curl
    state: present

- name: Download containerd tarball (v2.0.4)
  get_url:
    url: "https://github.com/containerd/containerd/releases/download/v2.0.4/containerd-2.0.4-linux-amd64.tar.gz"
    dest: "/tmp/containerd-2.0.4-linux-amd64.tar.gz"

- name: Extract containerd tarball to /usr/local
  shell: |
    tar -C /usr/local -xzf /tmp/containerd-2.0.4-linux-amd64.tar.gz

- name: Ensure containerd is executable
  file:
    path: "/usr/local/bin/containerd"
    mode: "u+x"

- name: Create containerd systemd service file
  copy:
    dest: /etc/systemd/system/containerd.service
    content: |
      [Unit]
      Description=containerd container runtime
      Documentation=https://containerd.io
      After=network.target

      [Service]
      ExecStart=/usr/local/bin/containerd
      Restart=always
      RestartSec=5
      Delegate=yes
      KillMode=process
      OOMScoreAdjust=-999
      LimitNOFILE=1048576
      LimitNPROC=infinity
      LimitCORE=infinity

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Ensure containerd is running
  systemd:
    name: containerd
    enabled: true
    state: started

- name: Clean up the tarball
  file:
    path: "/tmp/containerd-2.0.4-linux-amd64.tar.gz"
    state: absent

# Section 2: Ensure Configuration Directory Exists
- name: Ensure /etc/containerd directory exists
  file:
    path: /etc/containerd
    state: directory
    owner: root
    group: root
    mode: '0755'

# Section 3: Generate and Modify Containerd Configuration
- name: Generate containerd config if not present
  shell: containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml

# Section 4: Install runc
- name: Download runc binary using curl
  shell: |
    curl -Lo /tmp/runc-{{ ansible_architecture }} \
      https://github.com/opencontainers/runc/releases/download/v1.1.4/runc-{{ ansible_architecture }}

- name: Install runc binary to /usr/local/sbin/runc
  shell: |
    install -m 755 /tmp/runc-{{ ansible_architecture }} /usr/local/sbin/runc

# Section 5: Install CNI Plugins
- name: Download and install CNI plugins
  shell: |
    mkdir -p /opt/cni/bin
    curl -Lo /tmp/cni-plugins.tgz https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
    tar -C /opt/cni/bin -xzf /tmp/cni-plugins.tgz

- name: Validate CNI plugins installation
  stat:
    path: /opt/cni/bin/loopback
  register: loopback_plugin

- name: Fail if CNI plugins are not installed
  fail:
    msg: "CNI plugins installation failed. The 'loopback' plugin is missing in /opt/cni/bin."
  when: not loopback_plugin.stat.exists

# Section 6: Enable and Start Containerd Service
- name: Enable and start containerd service
  systemd:
    name: containerd
    enabled: yes
    state: restarted

# Section 7: Validate Containerd Installation
- name: Check containerd version
  shell: containerd --version
  register: containerd_version_check
  failed_when: containerd_version_check.rc != 0

- name: Debug containerd version
  debug:
    msg: "Containerd version: {{ containerd_version_check.stdout }}"

# Handlers
- name: Restart containerd
  systemd:
    name: containerd
    state: restarted
