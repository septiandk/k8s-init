# Section 1: Check and Install Kubernetes Components
- name: Check if kubelet, kubeadm, and kubectl are installed
  shell: |
    which kubelet && which kubeadm && which kubectl
  register: kube_tools_check
  failed_when: false

- name: Skip installation if kubelet, kubeadm, and kubectl are already installed
  debug:
    msg: "kubelet, kubeadm, and kubectl are already installed. Skipping installation."
  when: kube_tools_check.rc == 0

- name: Add Kubernetes GPG key
  shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version }}/deb/Release.key | \
    gpg --dearmor | tee /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  when: kube_tools_check.rc != 0

- name: Add Kubernetes repository
  copy:
    dest: /etc/apt/sources.list.d/kubernetes.list
    content: |
      deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version }}/deb/ /
  when: kube_tools_check.rc != 0

- name: Install kubelet, kubeadm, kubectl
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes
  register: kubernetes_install_result
  when: kube_tools_check.rc != 0

- name: Debug Kubernetes installation result
  debug:
    msg: "Installed packages result: {{ kubernetes_install_result }}"
  when: kube_tools_check.rc != 0

# Section 3: Install and Configure crictl
- name: Check if crictl is installed
  command: which crictl
  register: crictl_check
  failed_when: false

- name: Install crictl if not present
  shell: |
    VERSION=$(curl -s https://api.github.com/repos/kubernetes-sigs/cri-tools/releases/latest | grep tag_name | cut -d '"' -f 4)
    curl -LO https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
    sudo tar -C /usr/local/bin -xzf crictl-$VERSION-linux-amd64.tar.gz
    rm -f crictl-$VERSION-linux-amd64.tar.gz
  when: crictl_check.rc != 0

# Section 4: Finalize Kubernetes Setup
- name: Hold Kubernetes packages
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Enable and start kubelet service
  systemd:
    name: kubelet
    enabled: yes
    state: started
